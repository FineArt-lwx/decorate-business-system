<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.finearter.dbs.mapper.OrderMapper">
  <resultMap id="BaseResultMap" type="com.finearter.dbs.model.entity.Order">
    <!--@mbg.generated-->
    <!--@Table `order`-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="date" jdbcType="TIMESTAMP" property="date" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="customer_id" jdbcType="INTEGER" property="customerId" />
    <result column="note" jdbcType="VARCHAR" property="note" />
    <result column="employee_id" jdbcType="INTEGER" property="employeeId" />
    <result column="bill_id" jdbcType="INTEGER" property="billId" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, `date`, `status`, customer_id, note, employee_id, bill_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from `order`
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from `order`
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.finearter.dbs.model.entity.Order" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into `order` (`date`, `status`, customer_id, 
      note, employee_id, bill_id
      )
    values (#{date,jdbcType=TIMESTAMP}, #{status,jdbcType=VARCHAR}, #{customerId,jdbcType=INTEGER}, 
      #{note,jdbcType=VARCHAR}, #{employeeId,jdbcType=INTEGER}, #{billId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.finearter.dbs.model.entity.Order" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into `order`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="date != null">
        `date`,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="customerId != null">
        customer_id,
      </if>
      <if test="note != null">
        note,
      </if>
      <if test="employeeId != null">
        employee_id,
      </if>
      <if test="billId != null">
        bill_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="date != null">
        #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="customerId != null">
        #{customerId,jdbcType=INTEGER},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="employeeId != null">
        #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="billId != null">
        #{billId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.finearter.dbs.model.entity.Order">
    <!--@mbg.generated-->
    update `order`
    <set>
      <if test="date != null">
        `date` = #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=VARCHAR},
      </if>
      <if test="customerId != null">
        customer_id = #{customerId,jdbcType=INTEGER},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="employeeId != null">
        employee_id = #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="billId != null">
        bill_id = #{billId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.finearter.dbs.model.entity.Order">
    <!--@mbg.generated-->
    update `order`
    set `date` = #{date,jdbcType=TIMESTAMP},
      `status` = #{status,jdbcType=VARCHAR},
      customer_id = #{customerId,jdbcType=INTEGER},
      note = #{note,jdbcType=VARCHAR},
      employee_id = #{employeeId,jdbcType=INTEGER},
      bill_id = #{billId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>